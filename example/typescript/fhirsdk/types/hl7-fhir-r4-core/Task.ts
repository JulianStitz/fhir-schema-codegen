// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Address } from '../hl7-fhir-r4-core/Address';
import { Age } from '../hl7-fhir-r4-core/Age';
import { Annotation } from '../hl7-fhir-r4-core/Annotation';
import { Attachment } from '../hl7-fhir-r4-core/Attachment';
import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { Coding } from '../hl7-fhir-r4-core/Coding';
import { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import { ContactPoint } from '../hl7-fhir-r4-core/ContactPoint';
import { Contributor } from '../hl7-fhir-r4-core/Contributor';
import { Count } from '../hl7-fhir-r4-core/Count';
import { DataRequirement } from '../hl7-fhir-r4-core/DataRequirement';
import { Distance } from '../hl7-fhir-r4-core/Distance';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Dosage } from '../hl7-fhir-r4-core/Dosage';
import { Duration } from '../hl7-fhir-r4-core/Duration';
import { Expression } from '../hl7-fhir-r4-core/Expression';
import { HumanName } from '../hl7-fhir-r4-core/HumanName';
import { Identifier } from '../hl7-fhir-r4-core/Identifier';
import { Meta } from '../hl7-fhir-r4-core/Meta';
import { Money } from '../hl7-fhir-r4-core/Money';
import { ParameterDefinition } from '../hl7-fhir-r4-core/ParameterDefinition';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Quantity } from '../hl7-fhir-r4-core/Quantity';
import { Range } from '../hl7-fhir-r4-core/Range';
import { Ratio } from '../hl7-fhir-r4-core/Ratio';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { RelatedArtifact } from '../hl7-fhir-r4-core/RelatedArtifact';
import { SampledData } from '../hl7-fhir-r4-core/SampledData';
import { Signature } from '../hl7-fhir-r4-core/Signature';
import { Timing } from '../hl7-fhir-r4-core/Timing';
import { TriggerDefinition } from '../hl7-fhir-r4-core/TriggerDefinition';
import { UsageContext } from '../hl7-fhir-r4-core/UsageContext';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface TaskInput extends BackboneElement {
    type: CodeableConcept;
    valueAddress?: Address;
    valueAge?: Age;
    valueAnnotation?: Annotation;
    valueAttachment?: Attachment;
    valueBase64Binary?: string;
    valueBoolean?: boolean;
    valueCanonical?: string;
    valueCode?: string;
    valueCodeableConcept?: CodeableConcept;
    valueCoding?: Coding;
    valueContactDetail?: ContactDetail;
    valueContactPoint?: ContactPoint;
    valueContributor?: Contributor;
    valueCount?: Count;
    valueDataRequirement?: DataRequirement;
    valueDate?: string;
    valueDateTime?: string;
    valueDecimal?: number;
    valueDistance?: Distance;
    valueDosage?: Dosage;
    valueDuration?: Duration;
    valueExpression?: Expression;
    valueHumanName?: HumanName;
    valueId?: string;
    valueIdentifier?: Identifier;
    valueInstant?: string;
    valueInteger?: number;
    valueMarkdown?: string;
    valueMeta?: Meta;
    valueMoney?: Money;
    valueOid?: string;
    valueParameterDefinition?: ParameterDefinition;
    valuePeriod?: Period;
    valuePositiveInt?: number;
    valueQuantity?: Quantity;
    valueRange?: Range;
    valueRatio?: Ratio;
    valueReference?: Reference;
    valueRelatedArtifact?: RelatedArtifact;
    valueSampledData?: SampledData;
    valueSignature?: Signature;
    valueString?: string;
    valueTime?: string;
    valueTiming?: Timing;
    valueTriggerDefinition?: TriggerDefinition;
    valueUnsignedInt?: number;
    valueUri?: string;
    valueUrl?: string;
    valueUsageContext?: UsageContext;
    valueUuid?: string;
}

export interface TaskOutput extends BackboneElement {
    type: CodeableConcept;
    valueAddress?: Address;
    valueAge?: Age;
    valueAnnotation?: Annotation;
    valueAttachment?: Attachment;
    valueBase64Binary?: string;
    valueBoolean?: boolean;
    valueCanonical?: string;
    valueCode?: string;
    valueCodeableConcept?: CodeableConcept;
    valueCoding?: Coding;
    valueContactDetail?: ContactDetail;
    valueContactPoint?: ContactPoint;
    valueContributor?: Contributor;
    valueCount?: Count;
    valueDataRequirement?: DataRequirement;
    valueDate?: string;
    valueDateTime?: string;
    valueDecimal?: number;
    valueDistance?: Distance;
    valueDosage?: Dosage;
    valueDuration?: Duration;
    valueExpression?: Expression;
    valueHumanName?: HumanName;
    valueId?: string;
    valueIdentifier?: Identifier;
    valueInstant?: string;
    valueInteger?: number;
    valueMarkdown?: string;
    valueMeta?: Meta;
    valueMoney?: Money;
    valueOid?: string;
    valueParameterDefinition?: ParameterDefinition;
    valuePeriod?: Period;
    valuePositiveInt?: number;
    valueQuantity?: Quantity;
    valueRange?: Range;
    valueRatio?: Ratio;
    valueReference?: Reference;
    valueRelatedArtifact?: RelatedArtifact;
    valueSampledData?: SampledData;
    valueSignature?: Signature;
    valueString?: string;
    valueTime?: string;
    valueTiming?: Timing;
    valueTriggerDefinition?: TriggerDefinition;
    valueUnsignedInt?: number;
    valueUri?: string;
    valueUrl?: string;
    valueUsageContext?: UsageContext;
    valueUuid?: string;
}

export interface TaskRestriction extends BackboneElement {
    period?: Period;
    recipient?: Reference<'Group' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>[];
    repetitions?: number;
}

export interface Task extends DomainResource {
    authoredOn?: string;
    _authoredOn?: Element;
    basedOn?: Reference<'Resource'>[];
    businessStatus?: CodeableConcept;
    code?: CodeableConcept;
    description?: string;
    _description?: Element;
    encounter?: Reference<'Encounter'>;
    executionPeriod?: Period;
    focus?: Reference<'Resource'>;
    for?: Reference<'Resource'>;
    groupIdentifier?: Identifier;
    identifier?: Identifier[];
    input?: TaskInput[];
    instantiatesCanonical?: string;
    _instantiatesCanonical?: Element;
    instantiatesUri?: string;
    _instantiatesUri?: Element;
    insurance?: Reference<'ClaimResponse' | 'Coverage'>[];
    intent: 'unknown' | 'proposal' | 'plan' | 'order' | 'original-order' | 'reflex-order' | 'filler-order' | 'instance-order' | 'option';
    _intent?: Element;
    lastModified?: string;
    _lastModified?: Element;
    location?: Reference<'Location'>;
    note?: Annotation[];
    output?: TaskOutput[];
    owner?: Reference<'CareTeam' | 'Device' | 'HealthcareService' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    partOf?: Reference<'Task'>[];
    performerType?: CodeableConcept[];
    priority?: 'routine' | 'urgent' | 'asap' | 'stat';
    _priority?: Element;
    reasonCode?: CodeableConcept;
    reasonReference?: Reference<'Resource'>;
    relevantHistory?: Reference<'Provenance'>[];
    requester?: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    restriction?: TaskRestriction;
    status: 'draft' | 'requested' | 'received' | 'accepted' | 'rejected' | 'ready' | 'cancelled' | 'in-progress' | 'on-hold' | 'failed' | 'completed' | 'entered-in-error';
    _status?: Element;
    statusReason?: CodeableConcept;
}

