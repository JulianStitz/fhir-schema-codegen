# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import List as PyList, Literal

from aidbox.hl7_fhir_r4_core.base import CodeableConcept, Identifier, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class AppointmentResponse(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='AppointmentResponse',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='AppointmentResponse'
    )
    
    actor: Reference | None = Field(None, alias="actor", serialization_alias="actor")
    appointment: Reference = Field(alias="appointment", serialization_alias="appointment")
    comment: str | None = Field(None, alias="comment", serialization_alias="comment")
    end: str | None = Field(None, alias="end", serialization_alias="end")
    identifier: PyList[Identifier] | None = Field(None, alias="identifier", serialization_alias="identifier")
    participant_status: Literal["accepted", "declined", "tentative", "needs-action"] = Field(alias="participantStatus", serialization_alias="participantStatus")
    participant_type: PyList[CodeableConcept] | None = Field(None, alias="participantType", serialization_alias="participantType")
    start: str | None = Field(None, alias="start", serialization_alias="start")
    
    def to_json(self, indent: int | None = None) -> str:
        return self.model_dump_json(exclude_unset=True, exclude_none=True, indent=indent)
    
    @classmethod
    def from_json(cls, json: str) -> AppointmentResponse:
        return cls.model_validate_json(json)

