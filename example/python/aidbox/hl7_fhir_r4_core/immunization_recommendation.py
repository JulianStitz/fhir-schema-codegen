# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal, ForwardRef

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Identifier, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class ImmunizationRecommendationRecommendationDateCriterion(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    code: Optional[CodeableConcept] = Field(None, alias="code", serialization_alias="code")
    value: Optional[str] = Field(None, alias="value", serialization_alias="value")

class ImmunizationRecommendationRecommendation(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    contraindicated_vaccine_code: Optional[L[CodeableConcept]] = Field(None, alias="contraindicatedVaccineCode", serialization_alias="contraindicatedVaccineCode")
    date_criterion: Optional[L[ImmunizationRecommendationRecommendationDateCriterion]] = Field(None, alias="dateCriterion", serialization_alias="dateCriterion")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    dose_number_positive_int: Optional[PositiveInt] = Field(None, alias="doseNumberPositiveInt", serialization_alias="doseNumberPositiveInt")
    dose_number_string: Optional[str] = Field(None, alias="doseNumberString", serialization_alias="doseNumberString")
    forecast_reason: Optional[L[CodeableConcept]] = Field(None, alias="forecastReason", serialization_alias="forecastReason")
    forecast_status: Optional[CodeableConcept] = Field(None, alias="forecastStatus", serialization_alias="forecastStatus")
    series: Optional[str] = Field(None, alias="series", serialization_alias="series")
    series_doses_positive_int: Optional[PositiveInt] = Field(None, alias="seriesDosesPositiveInt", serialization_alias="seriesDosesPositiveInt")
    series_doses_string: Optional[str] = Field(None, alias="seriesDosesString", serialization_alias="seriesDosesString")
    supporting_immunization: Optional[L[Reference]] = Field(None, alias="supportingImmunization", serialization_alias="supportingImmunization")
    supporting_patient_information: Optional[L[Reference]] = Field(None, alias="supportingPatientInformation", serialization_alias="supportingPatientInformation")
    target_disease: Optional[CodeableConcept] = Field(None, alias="targetDisease", serialization_alias="targetDisease")
    vaccine_code: Optional[L[CodeableConcept]] = Field(None, alias="vaccineCode", serialization_alias="vaccineCode")


class ImmunizationRecommendation(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='ImmunizationRecommendation',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='ImmunizationRecommendation'
    )
    
    authority: Optional[Reference] = Field(None, alias="authority", serialization_alias="authority")
    date: Optional[str] = Field(None, alias="date", serialization_alias="date")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    patient: Optional[Reference] = Field(None, alias="patient", serialization_alias="patient")
    recommendation: Optional[L[ImmunizationRecommendationRecommendation]] = Field(None, alias="recommendation", serialization_alias="recommendation")

