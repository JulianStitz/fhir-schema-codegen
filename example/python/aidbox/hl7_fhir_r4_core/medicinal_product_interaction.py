# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class MedicinalProductInteractionInteractant(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    item_codeable_concept: Optional[CodeableConcept] = Field(None, alias="itemCodeableConcept", serialization_alias="itemCodeableConcept")
    item_reference: Optional[Reference] = Field(None, alias="itemReference", serialization_alias="itemReference")


class MedicinalProductInteraction(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    effect: Optional[CodeableConcept] = Field(None, alias="effect", serialization_alias="effect")
    incidence: Optional[CodeableConcept] = Field(None, alias="incidence", serialization_alias="incidence")
    interactant: Optional[L[MedicinalProductInteractionInteractant]] = Field(None, alias="interactant", serialization_alias="interactant")
    management: Optional[CodeableConcept] = Field(None, alias="management", serialization_alias="management")
    subject: Optional[L[Reference]] = Field(None, alias="subject", serialization_alias="subject")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")

