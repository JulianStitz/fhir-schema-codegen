# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import List as PyList, Literal, ForwardRef

from aidbox.hl7_fhir_r4_core.base import CodeableConcept, Identifier, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class ImmunizationEvaluation(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='ImmunizationEvaluation',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='ImmunizationEvaluation'
    )
    
    authority: Reference | None = Field(None, alias="authority", serialization_alias="authority")
    date: str | None = Field(None, alias="date", serialization_alias="date")
    description: str | None = Field(None, alias="description", serialization_alias="description")
    dose_number_positive_int: PositiveInt | None = Field(None, alias="doseNumberPositiveInt", serialization_alias="doseNumberPositiveInt")
    dose_number_string: str | None = Field(None, alias="doseNumberString", serialization_alias="doseNumberString")
    dose_status: CodeableConcept = Field(alias="doseStatus", serialization_alias="doseStatus")
    dose_status_reason: PyList[CodeableConcept] | None = Field(None, alias="doseStatusReason", serialization_alias="doseStatusReason")
    identifier: PyList[Identifier] | None = Field(None, alias="identifier", serialization_alias="identifier")
    immunization_event: Reference = Field(alias="immunizationEvent", serialization_alias="immunizationEvent")
    patient: Reference = Field(alias="patient", serialization_alias="patient")
    series: str | None = Field(None, alias="series", serialization_alias="series")
    series_doses_positive_int: PositiveInt | None = Field(None, alias="seriesDosesPositiveInt", serialization_alias="seriesDosesPositiveInt")
    series_doses_string: str | None = Field(None, alias="seriesDosesString", serialization_alias="seriesDosesString")
    status: Literal["completed", "entered-in-error"] = Field(alias="status", serialization_alias="status")
    target_disease: CodeableConcept = Field(alias="targetDisease", serialization_alias="targetDisease")
    
    def to_json(self, indent: int | None = None) -> str:
        return self.model_dump_json(exclude_unset=True, exclude_none=True, indent=indent)
    
    @classmethod
    def from_json(cls, json: str) -> ImmunizationEvaluation:
        return cls.model_validate_json(json)

