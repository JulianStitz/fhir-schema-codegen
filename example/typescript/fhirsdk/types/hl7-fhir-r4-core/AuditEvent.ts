// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { Coding } from '../hl7-fhir-r4-core/Coding';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface AuditEventAgent extends BackboneElement {
    altId?: string;
    location?: Reference<'Location'>;
    media?: Coding;
    name?: string;
    network?: AuditEventAgentNetwork;
    policy?: string[];
    purposeOfUse?: CodeableConcept[];
    requestor: boolean;
    role?: CodeableConcept[];
    type?: CodeableConcept;
    who?: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
}

export interface AuditEventAgentNetwork extends BackboneElement {
    address?: string;
    type?: '1' | '2' | '3' | '4' | '5';
}

export interface AuditEventEntity extends BackboneElement {
    description?: string;
    detail?: AuditEventEntityDetail[];
    lifecycle?: Coding;
    name?: string;
    query?: string;
    role?: Coding;
    securityLabel?: Coding[];
    type?: Coding;
    what?: Reference<'Resource'>;
}

export interface AuditEventEntityDetail extends BackboneElement {
    type: string;
    valueBase64Binary?: string;
    valueString?: string;
}

export interface AuditEventSource extends BackboneElement {
    observer: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    site?: string;
    type?: Coding[];
}

export interface AuditEvent extends DomainResource {
    action?: 'C' | 'R' | 'U' | 'D' | 'E';
    _action?: Element;
    agent: AuditEventAgent[];
    entity?: AuditEventEntity[];
    outcome?: '0' | '4' | '8' | '12';
    _outcome?: Element;
    outcomeDesc?: string;
    _outcomeDesc?: Element;
    period?: Period;
    purposeOfEvent?: CodeableConcept[];
    recorded: string;
    _recorded?: Element;
    source: AuditEventSource;
    subtype?: Coding[];
    type: Coding;
}

