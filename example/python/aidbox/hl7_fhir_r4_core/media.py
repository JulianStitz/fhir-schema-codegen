# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal, ForwardRef

from aidbox.hl7_fhir_r4_core.base import Annotation, Attachment, CodeableConcept, Identifier, Period, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class Media(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='Media',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='Media'
    )
    
    based_on: Optional[L[Reference]] = Field(None, alias="basedOn", serialization_alias="basedOn")
    body_site: Optional[CodeableConcept] = Field(None, alias="bodySite", serialization_alias="bodySite")
    content: Optional[Attachment] = Field(None, alias="content", serialization_alias="content")
    created_date_time: Optional[str] = Field(None, alias="createdDateTime", serialization_alias="createdDateTime")
    created_period: Optional[Period] = Field(None, alias="createdPeriod", serialization_alias="createdPeriod")
    device: Optional[Reference] = Field(None, alias="device", serialization_alias="device")
    device_name: Optional[str] = Field(None, alias="deviceName", serialization_alias="deviceName")
    duration: Optional[float] = Field(None, alias="duration", serialization_alias="duration")
    encounter: Optional[Reference] = Field(None, alias="encounter", serialization_alias="encounter")
    frames: Optional[PositiveInt] = Field(None, alias="frames", serialization_alias="frames")
    height: Optional[PositiveInt] = Field(None, alias="height", serialization_alias="height")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    issued: Optional[str] = Field(None, alias="issued", serialization_alias="issued")
    modality: Optional[CodeableConcept] = Field(None, alias="modality", serialization_alias="modality")
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    operator: Optional[Reference] = Field(None, alias="operator", serialization_alias="operator")
    part_of: Optional[L[Reference]] = Field(None, alias="partOf", serialization_alias="partOf")
    reason_code: Optional[L[CodeableConcept]] = Field(None, alias="reasonCode", serialization_alias="reasonCode")
    status: Optional[Literal["preparation", "in-progress", "not-done", "on-hold", "stopped", "completed", "entered-in-error", "unknown"]] = Field(None, alias="status", serialization_alias="status")
    subject: Optional[Reference] = Field(None, alias="subject", serialization_alias="subject")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")
    view: Optional[CodeableConcept] = Field(None, alias="view", serialization_alias="view")
    width: Optional[PositiveInt] = Field(None, alias="width", serialization_alias="width")

