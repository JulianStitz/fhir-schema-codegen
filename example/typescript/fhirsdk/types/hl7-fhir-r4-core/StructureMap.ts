// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Address } from '../hl7-fhir-r4-core/Address';
import { Age } from '../hl7-fhir-r4-core/Age';
import { Annotation } from '../hl7-fhir-r4-core/Annotation';
import { Attachment } from '../hl7-fhir-r4-core/Attachment';
import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { Coding } from '../hl7-fhir-r4-core/Coding';
import { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import { ContactPoint } from '../hl7-fhir-r4-core/ContactPoint';
import { Contributor } from '../hl7-fhir-r4-core/Contributor';
import { Count } from '../hl7-fhir-r4-core/Count';
import { DataRequirement } from '../hl7-fhir-r4-core/DataRequirement';
import { Distance } from '../hl7-fhir-r4-core/Distance';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Dosage } from '../hl7-fhir-r4-core/Dosage';
import { Duration } from '../hl7-fhir-r4-core/Duration';
import { Expression } from '../hl7-fhir-r4-core/Expression';
import { HumanName } from '../hl7-fhir-r4-core/HumanName';
import { Identifier } from '../hl7-fhir-r4-core/Identifier';
import { Meta } from '../hl7-fhir-r4-core/Meta';
import { Money } from '../hl7-fhir-r4-core/Money';
import { ParameterDefinition } from '../hl7-fhir-r4-core/ParameterDefinition';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Quantity } from '../hl7-fhir-r4-core/Quantity';
import { Range } from '../hl7-fhir-r4-core/Range';
import { Ratio } from '../hl7-fhir-r4-core/Ratio';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { RelatedArtifact } from '../hl7-fhir-r4-core/RelatedArtifact';
import { SampledData } from '../hl7-fhir-r4-core/SampledData';
import { Signature } from '../hl7-fhir-r4-core/Signature';
import { Timing } from '../hl7-fhir-r4-core/Timing';
import { TriggerDefinition } from '../hl7-fhir-r4-core/TriggerDefinition';
import { UsageContext } from '../hl7-fhir-r4-core/UsageContext';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface StructureMapGroup extends BackboneElement {
    documentation?: string;
    extends?: string;
    input: StructureMapGroupInput[];
    name: string;
    rule: StructureMapGroupRule[];
    typeMode: 'none' | 'types' | 'type-and-types';
}

export interface StructureMapGroupInput extends BackboneElement {
    documentation?: string;
    mode: 'source' | 'target';
    name: string;
    type?: string;
}

export interface StructureMapGroupRule extends BackboneElement {
    dependent?: StructureMapGroupRuleDependent[];
    documentation?: string;
    name: string;
    rule?: StructureMapGroupRule[];
    source: StructureMapGroupRuleSource[];
    target?: StructureMapGroupRuleTarget[];
}

export interface StructureMapGroupRuleDependent extends BackboneElement {
    name: string;
    variable: string[];
}

export interface StructureMapGroupRuleSource extends BackboneElement {
    check?: string;
    condition?: string;
    context: string;
    defaultValueAddress?: Address;
    defaultValueAge?: Age;
    defaultValueAnnotation?: Annotation;
    defaultValueAttachment?: Attachment;
    defaultValueBase64Binary?: string;
    defaultValueBoolean?: boolean;
    defaultValueCanonical?: string;
    defaultValueCode?: string;
    defaultValueCodeableConcept?: CodeableConcept;
    defaultValueCoding?: Coding;
    defaultValueContactDetail?: ContactDetail;
    defaultValueContactPoint?: ContactPoint;
    defaultValueContributor?: Contributor;
    defaultValueCount?: Count;
    defaultValueDataRequirement?: DataRequirement;
    defaultValueDate?: string;
    defaultValueDateTime?: string;
    defaultValueDecimal?: number;
    defaultValueDistance?: Distance;
    defaultValueDosage?: Dosage;
    defaultValueDuration?: Duration;
    defaultValueExpression?: Expression;
    defaultValueHumanName?: HumanName;
    defaultValueId?: string;
    defaultValueIdentifier?: Identifier;
    defaultValueInstant?: string;
    defaultValueInteger?: number;
    defaultValueMarkdown?: string;
    defaultValueMeta?: Meta;
    defaultValueMoney?: Money;
    defaultValueOid?: string;
    defaultValueParameterDefinition?: ParameterDefinition;
    defaultValuePeriod?: Period;
    defaultValuePositiveInt?: number;
    defaultValueQuantity?: Quantity;
    defaultValueRange?: Range;
    defaultValueRatio?: Ratio;
    defaultValueReference?: Reference;
    defaultValueRelatedArtifact?: RelatedArtifact;
    defaultValueSampledData?: SampledData;
    defaultValueSignature?: Signature;
    defaultValueString?: string;
    defaultValueTime?: string;
    defaultValueTiming?: Timing;
    defaultValueTriggerDefinition?: TriggerDefinition;
    defaultValueUnsignedInt?: number;
    defaultValueUri?: string;
    defaultValueUrl?: string;
    defaultValueUsageContext?: UsageContext;
    defaultValueUuid?: string;
    element?: string;
    listMode?: 'first' | 'not_first' | 'last' | 'not_last' | 'only_one';
    logMessage?: string;
    max?: string;
    min?: number;
    type?: string;
    variable?: string;
}

export interface StructureMapGroupRuleTarget extends BackboneElement {
    context?: string;
    contextType?: 'type' | 'variable';
    element?: string;
    listMode?: 'first' | 'share' | 'last' | 'collate'[];
    listRuleId?: string;
    parameter?: StructureMapGroupRuleTargetParameter[];
    transform?: 'create' | 'copy' | 'truncate' | 'escape' | 'cast' | 'append' | 'translate' | 'reference' | 'dateOp' | 'uuid' | 'pointer' | 'evaluate' | 'cc' | 'c' | 'qty' | 'id' | 'cp';
    variable?: string;
}

export interface StructureMapGroupRuleTargetParameter extends BackboneElement {
    valueBoolean?: boolean;
    valueDecimal?: number;
    valueId?: string;
    valueInteger?: number;
    valueString?: string;
}

export interface StructureMapStructure extends BackboneElement {
    alias?: string;
    documentation?: string;
    mode: 'source' | 'queried' | 'target' | 'produced';
    url: string;
}

export interface StructureMap extends DomainResource {
    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date?: string;
    _date?: Element;
    description?: string;
    _description?: Element;
    experimental?: boolean;
    _experimental?: Element;
    group: StructureMapGroup[];
    identifier?: Identifier[];
    import?: string[];
    _import?: Element;
    jurisdiction?: CodeableConcept[];
    name: string;
    _name?: Element;
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    status: 'draft' | 'active' | 'retired' | 'unknown';
    _status?: Element;
    structure?: StructureMapStructure[];
    title?: string;
    _title?: Element;
    url: string;
    _url?: Element;
    useContext?: UsageContext[];
    version?: string;
    _version?: Element;
}

