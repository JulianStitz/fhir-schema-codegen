// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { AuditEvent } from '../hl7-fhir-r4-core/AuditEvent';
import { AuditEventAgent } from '../hl7-fhir-r4-core/AuditEvent';
import { AuditEventAgentNetwork } from '../hl7-fhir-r4-core/AuditEvent';
import { AuditEventEntity } from '../hl7-fhir-r4-core/AuditEvent';
import { AuditEventEntityDetail } from '../hl7-fhir-r4-core/AuditEvent';
import { AuditEventSource } from '../hl7-fhir-r4-core/AuditEvent';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { Coding } from '../hl7-fhir-r4-core/Coding';
import { Element } from '../hl7-fhir-r4-core/Element';

export interface EhrsrleAuditevent {
    __profileUrl: 'http://hl7.org/fhir/StructureDefinition/ehrsrle-auditevent';
    
    type: Coding;
    subtype?: Coding[];
    action?: 'C' | 'R' | 'U' | 'D' | 'E';
    recorded: string;
    purposeOfEvent?: CodeableConcept[];
    agent: AuditEventAgent[];
    source: AuditEventSource;
    entity?: AuditEventEntity[];
}

export const attach_EhrsrleAuditevent = (resource: AuditEvent, profile: EhrsrleAuditevent): AuditEvent => {
    return {
        ...resource,
        meta: {
            profile: ['http://hl7.org/fhir/StructureDefinition/ehrsrle-auditevent']
        },
        type: profile.type,
        subtype: profile.subtype,
        action: profile.action,
        recorded: profile.recorded,
        purposeOfEvent: profile.purposeOfEvent,
        agent: profile.agent,
        source: profile.source,
        entity: profile.entity,
    }
}

export const extract_AuditEvent = (resource: AuditEvent): EhrsrleAuditevent => {
    return {
        __profileUrl: 'http://hl7.org/fhir/StructureDefinition/ehrsrle-auditevent',
        type: resource.type,
        subtype: resource.subtype,
        action: resource.action,
        recorded: resource.recorded,
        purposeOfEvent: resource.purposeOfEvent,
        agent: resource.agent,
        source: resource.source,
        entity: resource.entity,
    }
}
