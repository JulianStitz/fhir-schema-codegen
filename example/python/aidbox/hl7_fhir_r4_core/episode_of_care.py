# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal, ForwardRef

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Identifier, Period, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class EpisodeOfCareDiagnosis(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    condition: Optional[Reference] = Field(None, alias="condition", serialization_alias="condition")
    rank: Optional[PositiveInt] = Field(None, alias="rank", serialization_alias="rank")
    role: Optional[CodeableConcept] = Field(None, alias="role", serialization_alias="role")

class EpisodeOfCareStatusHistory(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    period: Optional[Period] = Field(None, alias="period", serialization_alias="period")
    status: Optional[Literal["planned", "waitlist", "active", "onhold", "finished", "cancelled", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")


class EpisodeOfCare(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='EpisodeOfCare',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='EpisodeOfCare'
    )
    
    account: Optional[L[Reference]] = Field(None, alias="account", serialization_alias="account")
    care_manager: Optional[Reference] = Field(None, alias="careManager", serialization_alias="careManager")
    diagnosis: Optional[L[EpisodeOfCareDiagnosis]] = Field(None, alias="diagnosis", serialization_alias="diagnosis")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    managing_organization: Optional[Reference] = Field(None, alias="managingOrganization", serialization_alias="managingOrganization")
    patient: Optional[Reference] = Field(None, alias="patient", serialization_alias="patient")
    period: Optional[Period] = Field(None, alias="period", serialization_alias="period")
    referral_request: Optional[L[Reference]] = Field(None, alias="referralRequest", serialization_alias="referralRequest")
    status: Optional[Literal["planned", "waitlist", "active", "onhold", "finished", "cancelled", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")
    status_history: Optional[L[EpisodeOfCareStatusHistory]] = Field(None, alias="statusHistory", serialization_alias="statusHistory")
    team: Optional[L[Reference]] = Field(None, alias="team", serialization_alias="team")
    type: Optional[L[CodeableConcept]] = Field(None, alias="type", serialization_alias="type")

