# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Identifier, Period, Quantity, Reference, Timing
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class SupplyDeliverySuppliedItem(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    item_codeable_concept: Optional[CodeableConcept] = Field(None, alias="itemCodeableConcept", serialization_alias="itemCodeableConcept")
    item_reference: Optional[Reference] = Field(None, alias="itemReference", serialization_alias="itemReference")
    quantity: Optional[Quantity] = Field(None, alias="quantity", serialization_alias="quantity")


class SupplyDelivery(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='SupplyDelivery',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='SupplyDelivery'
    )
    
    based_on: Optional[L[Reference]] = Field(None, alias="basedOn", serialization_alias="basedOn")
    destination: Optional[Reference] = Field(None, alias="destination", serialization_alias="destination")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    occurrence_date_time: Optional[str] = Field(None, alias="occurrenceDateTime", serialization_alias="occurrenceDateTime")
    occurrence_period: Optional[Period] = Field(None, alias="occurrencePeriod", serialization_alias="occurrencePeriod")
    occurrence_timing: Optional[Timing] = Field(None, alias="occurrenceTiming", serialization_alias="occurrenceTiming")
    part_of: Optional[L[Reference]] = Field(None, alias="partOf", serialization_alias="partOf")
    patient: Optional[Reference] = Field(None, alias="patient", serialization_alias="patient")
    receiver: Optional[L[Reference]] = Field(None, alias="receiver", serialization_alias="receiver")
    status: Optional[Literal["in-progress", "completed", "abandoned", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")
    supplied_item: Optional[SupplyDeliverySuppliedItem] = Field(None, alias="suppliedItem", serialization_alias="suppliedItem")
    supplier: Optional[Reference] = Field(None, alias="supplier", serialization_alias="supplier")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")

