# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Identifier, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class DocumentManifestRelated(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    identifier: Optional[Identifier] = Field(None, alias="identifier", serialization_alias="identifier")
    ref: Optional[Reference] = Field(None, alias="ref", serialization_alias="ref")


class DocumentManifest(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    author: Optional[L[Reference]] = Field(None, alias="author", serialization_alias="author")
    content: Optional[L[Reference]] = Field(None, alias="content", serialization_alias="content")
    created: Optional[str] = Field(None, alias="created", serialization_alias="created")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    master_identifier: Optional[Identifier] = Field(None, alias="masterIdentifier", serialization_alias="masterIdentifier")
    recipient: Optional[L[Reference]] = Field(None, alias="recipient", serialization_alias="recipient")
    related: Optional[L[DocumentManifestRelated]] = Field(None, alias="related", serialization_alias="related")
    source: Optional[str] = Field(None, alias="source", serialization_alias="source")
    status: Optional[Literal["current", "superseded", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")
    subject: Optional[Reference] = Field(None, alias="subject", serialization_alias="subject")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")

