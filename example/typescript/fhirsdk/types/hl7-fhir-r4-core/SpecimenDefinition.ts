// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Duration } from '../hl7-fhir-r4-core/Duration';
import { Identifier } from '../hl7-fhir-r4-core/Identifier';
import { Quantity } from '../hl7-fhir-r4-core/Quantity';
import { Range } from '../hl7-fhir-r4-core/Range';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface SpecimenDefinitionTypeTested extends BackboneElement {
    container?: SpecimenDefinitionTypeTestedContainer;
    handling?: SpecimenDefinitionTypeTestedHandling[];
    isDerived?: boolean;
    preference: 'preferred' | 'alternate';
    rejectionCriterion?: CodeableConcept[];
    requirement?: string;
    retentionTime?: Duration;
    type?: CodeableConcept;
}

export interface SpecimenDefinitionTypeTestedContainer extends BackboneElement {
    additive?: SpecimenDefinitionTypeTestedContainerAdditive[];
    cap?: CodeableConcept;
    capacity?: Quantity;
    description?: string;
    material?: CodeableConcept;
    minimumVolumeQuantity?: Quantity;
    minimumVolumeString?: string;
    preparation?: string;
    type?: CodeableConcept;
}

export interface SpecimenDefinitionTypeTestedContainerAdditive extends BackboneElement {
    additiveCodeableConcept?: CodeableConcept;
    additiveReference?: Reference<'Substance'>;
}

export interface SpecimenDefinitionTypeTestedHandling extends BackboneElement {
    instruction?: string;
    maxDuration?: Duration;
    temperatureQualifier?: CodeableConcept;
    temperatureRange?: Range;
}

export interface SpecimenDefinition extends DomainResource {
    collection?: CodeableConcept[];
    identifier?: Identifier;
    patientPreparation?: CodeableConcept[];
    timeAspect?: string;
    _timeAspect?: Element;
    typeCollected?: CodeableConcept;
    typeTested?: SpecimenDefinitionTypeTested[];
}

