// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Identifier } from '../hl7-fhir-r4-core/Identifier';
import { Money } from '../hl7-fhir-r4-core/Money';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface CoverageEligibilityResponseError extends BackboneElement {
    code: CodeableConcept;
}

export interface CoverageEligibilityResponseInsurance extends BackboneElement {
    benefitPeriod?: Period;
    coverage: Reference<'Coverage'>;
    inforce?: boolean;
    item?: CoverageEligibilityResponseInsuranceItem[];
}

export interface CoverageEligibilityResponseInsuranceItem extends BackboneElement {
    authorizationRequired?: boolean;
    authorizationSupporting?: CodeableConcept[];
    authorizationUrl?: string;
    benefit?: CoverageEligibilityResponseInsuranceItemBenefit[];
    category?: CodeableConcept;
    description?: string;
    excluded?: boolean;
    modifier?: CodeableConcept[];
    name?: string;
    network?: CodeableConcept;
    productOrService?: CodeableConcept;
    provider?: Reference<'Practitioner' | 'PractitionerRole'>;
    term?: CodeableConcept;
    unit?: CodeableConcept;
}

export interface CoverageEligibilityResponseInsuranceItemBenefit extends BackboneElement {
    allowedMoney?: Money;
    allowedString?: string;
    allowedUnsignedInt?: number;
    type: CodeableConcept;
    usedMoney?: Money;
    usedString?: string;
    usedUnsignedInt?: number;
}

export interface CoverageEligibilityResponse extends DomainResource {
    created: string;
    _created?: Element;
    disposition?: string;
    _disposition?: Element;
    error?: CoverageEligibilityResponseError[];
    form?: CodeableConcept;
    identifier?: Identifier[];
    insurance?: CoverageEligibilityResponseInsurance[];
    insurer: Reference<'Organization'>;
    outcome: 'queued' | 'complete' | 'error' | 'partial';
    _outcome?: Element;
    patient: Reference<'Patient'>;
    preAuthRef?: string;
    _preAuthRef?: Element;
    purpose: 'auth-requirements' | 'benefits' | 'discovery' | 'validation'[];
    _purpose?: Element;
    request: Reference<'CoverageEligibilityRequest'>;
    requestor?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
    servicedDate?: string;
    _servicedDate?: Element;
    servicedPeriod?: Period;
    status: 'active' | 'cancelled' | 'draft' | 'entered-in-error';
    _status?: Element;
}

