# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import *
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import *
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class RiskEvidenceSynthesisSampleSize(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    number_of_participants: Optional[int] = Field(None, alias="numberOfParticipants", serialization_alias="numberOfParticipants")
    number_of_studies: Optional[int] = Field(None, alias="numberOfStudies", serialization_alias="numberOfStudies")

class RiskEvidenceSynthesisCertaintyCertaintySubcomponent(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    rating: Optional[L[CodeableConcept]] = Field(None, alias="rating", serialization_alias="rating")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")

class RiskEvidenceSynthesisCertainty(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    certainty_subcomponent: Optional[L[RiskEvidenceSynthesisCertaintyCertaintySubcomponent]] = Field(None, alias="certaintySubcomponent", serialization_alias="certaintySubcomponent")
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    rating: Optional[L[CodeableConcept]] = Field(None, alias="rating", serialization_alias="rating")

class RiskEvidenceSynthesisRiskEstimatePrecisionEstimate(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    from_: Optional[float] = Field(None, alias="from", serialization_alias="from")
    level: Optional[float] = Field(None, alias="level", serialization_alias="level")
    to: Optional[float] = Field(None, alias="to", serialization_alias="to")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")

class RiskEvidenceSynthesisRiskEstimate(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    denominator_count: Optional[int] = Field(None, alias="denominatorCount", serialization_alias="denominatorCount")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    numerator_count: Optional[int] = Field(None, alias="numeratorCount", serialization_alias="numeratorCount")
    precision_estimate: Optional[L[RiskEvidenceSynthesisRiskEstimatePrecisionEstimate]] = Field(None, alias="precisionEstimate", serialization_alias="precisionEstimate")
    type: Optional[CodeableConcept] = Field(None, alias="type", serialization_alias="type")
    unit_of_measure: Optional[CodeableConcept] = Field(None, alias="unitOfMeasure", serialization_alias="unitOfMeasure")
    value: Optional[float] = Field(None, alias="value", serialization_alias="value")


class RiskEvidenceSynthesis(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    approval_date: Optional[str] = Field(None, alias="approvalDate", serialization_alias="approvalDate")
    author: Optional[L[ContactDetail]] = Field(None, alias="author", serialization_alias="author")
    certainty: Optional[L[RiskEvidenceSynthesisCertainty]] = Field(None, alias="certainty", serialization_alias="certainty")
    contact: Optional[L[ContactDetail]] = Field(None, alias="contact", serialization_alias="contact")
    copyright: Optional[str] = Field(None, alias="copyright", serialization_alias="copyright")
    date: Optional[str] = Field(None, alias="date", serialization_alias="date")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    editor: Optional[L[ContactDetail]] = Field(None, alias="editor", serialization_alias="editor")
    effective_period: Optional[Period] = Field(None, alias="effectivePeriod", serialization_alias="effectivePeriod")
    endorser: Optional[L[ContactDetail]] = Field(None, alias="endorser", serialization_alias="endorser")
    exposure: Optional[Reference] = Field(None, alias="exposure", serialization_alias="exposure")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    jurisdiction: Optional[L[CodeableConcept]] = Field(None, alias="jurisdiction", serialization_alias="jurisdiction")
    last_review_date: Optional[str] = Field(None, alias="lastReviewDate", serialization_alias="lastReviewDate")
    name: Optional[str] = Field(None, alias="name", serialization_alias="name")
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    outcome: Optional[Reference] = Field(None, alias="outcome", serialization_alias="outcome")
    population: Optional[Reference] = Field(None, alias="population", serialization_alias="population")
    publisher: Optional[str] = Field(None, alias="publisher", serialization_alias="publisher")
    related_artifact: Optional[L[RelatedArtifact]] = Field(None, alias="relatedArtifact", serialization_alias="relatedArtifact")
    reviewer: Optional[L[ContactDetail]] = Field(None, alias="reviewer", serialization_alias="reviewer")
    risk_estimate: Optional[RiskEvidenceSynthesisRiskEstimate] = Field(None, alias="riskEstimate", serialization_alias="riskEstimate")
    sample_size: Optional[RiskEvidenceSynthesisSampleSize] = Field(None, alias="sampleSize", serialization_alias="sampleSize")
    status: Optional[Literal["draft", "active", "retired", "unknown"]] = Field(None, alias="status", serialization_alias="status")
    study_type: Optional[CodeableConcept] = Field(None, alias="studyType", serialization_alias="studyType")
    synthesis_type: Optional[CodeableConcept] = Field(None, alias="synthesisType", serialization_alias="synthesisType")
    title: Optional[str] = Field(None, alias="title", serialization_alias="title")
    topic: Optional[L[CodeableConcept]] = Field(None, alias="topic", serialization_alias="topic")
    url: Optional[str] = Field(None, alias="url", serialization_alias="url")
    use_context: Optional[L[UsageContext]] = Field(None, alias="useContext", serialization_alias="useContext")
    version: Optional[str] = Field(None, alias="version", serialization_alias="version")

