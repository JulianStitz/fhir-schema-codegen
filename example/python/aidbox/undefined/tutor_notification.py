# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import List as PyList, Literal

from aidbox.hl7_fhir_r4_core.base import Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource
from aidbox.hl7_fhir_r4_core.resource_families import DomainResourceFamily


class TutorNotification(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='TutorNotification',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='TutorNotification'
    )
    
    message: str | None = Field(None, alias="message", serialization_alias="message")
    send_after: str = Field(alias="sendAfter", serialization_alias="sendAfter")
    status: str = Field(alias="status", serialization_alias="status")
    subject: Reference = Field(alias="subject", serialization_alias="subject")
    template: Reference = Field(alias="template", serialization_alias="template")
    type: str = Field(alias="type", serialization_alias="type")
    
    def to_json(self, indent: int | None = None) -> str:
        return self.model_dump_json(exclude_unset=True, exclude_none=True, indent=indent)
    
    @classmethod
    def from_json(cls, json: str) -> TutorNotification:
        return cls.model_validate_json(json)

