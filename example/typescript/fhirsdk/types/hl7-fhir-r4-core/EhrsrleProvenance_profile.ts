// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Provenance } from '../hl7-fhir-r4-core/Provenance';
import { ProvenanceAgent } from '../hl7-fhir-r4-core/Provenance';
import { ProvenanceEntity } from '../hl7-fhir-r4-core/Provenance';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { Signature } from '../hl7-fhir-r4-core/Signature';
import { Element } from '../hl7-fhir-r4-core/Element';

export interface EhrsrleProvenance {
    __profileUrl: 'http://hl7.org/fhir/StructureDefinition/ehrsrle-provenance';
    
    signature?: Signature[];
    occurredDateTime?: string;
    recorded: string;
    agent: ProvenanceAgent[];
    policy?: string[];
    reason?: CodeableConcept[];
    activity?: CodeableConcept;
    target: Reference<'Resource'>[];
    location?: Reference<'Location'>;
    occurredPeriod?: Period;
}

export const attach_EhrsrleProvenance = (resource: Provenance, profile: EhrsrleProvenance): Provenance => {
    return {
        ...resource,
        meta: {
            profile: ['http://hl7.org/fhir/StructureDefinition/ehrsrle-provenance']
        },
        signature: profile.signature,
        occurredDateTime: profile.occurredDateTime,
        recorded: profile.recorded,
        agent: profile.agent,
        policy: profile.policy,
        reason: profile.reason,
        activity: profile.activity,
        target: profile.target,
        location: profile.location,
        occurredPeriod: profile.occurredPeriod,
    }
}

export const extract_Provenance = (resource: Provenance): EhrsrleProvenance => {
    return {
        __profileUrl: 'http://hl7.org/fhir/StructureDefinition/ehrsrle-provenance',
        signature: resource.signature,
        occurredDateTime: resource.occurredDateTime,
        recorded: resource.recorded,
        agent: resource.agent,
        policy: resource.policy,
        reason: resource.reason,
        activity: resource.activity,
        target: resource.target,
        location: resource.location,
        occurredPeriod: resource.occurredPeriod,
    }
}
