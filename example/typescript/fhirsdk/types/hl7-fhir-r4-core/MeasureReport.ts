// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import { Identifier } from '../hl7-fhir-r4-core/Identifier';
import { Period } from '../hl7-fhir-r4-core/Period';
import { Quantity } from '../hl7-fhir-r4-core/Quantity';
import { Reference } from '../hl7-fhir-r4-core/Reference';
import { Element } from '../hl7-fhir-r4-core/Element';


export interface MeasureReportGroup extends BackboneElement {
    code?: CodeableConcept;
    measureScore?: Quantity;
    population?: MeasureReportGroupPopulation[];
    stratifier?: MeasureReportGroupStratifier[];
}

export interface MeasureReportGroupPopulation extends BackboneElement {
    code?: CodeableConcept;
    count?: number;
    subjectResults?: Reference<'List'>;
}

export interface MeasureReportGroupStratifier extends BackboneElement {
    code?: CodeableConcept[];
    stratum?: MeasureReportGroupStratifierStratum[];
}

export interface MeasureReportGroupStratifierStratum extends BackboneElement {
    component?: MeasureReportGroupStratifierStratumComponent[];
    measureScore?: Quantity;
    population?: MeasureReportGroupStratifierStratumPopulation[];
    value?: CodeableConcept;
}

export interface MeasureReportGroupStratifierStratumComponent extends BackboneElement {
    code: CodeableConcept;
    value: CodeableConcept;
}

export interface MeasureReportGroupStratifierStratumPopulation extends BackboneElement {
    code?: CodeableConcept;
    count?: number;
    subjectResults?: Reference<'List'>;
}

export interface MeasureReport extends DomainResource {
    date?: string;
    _date?: Element;
    evaluatedResource?: Reference<'Resource'>[];
    group?: MeasureReportGroup[];
    identifier?: Identifier[];
    improvementNotation?: CodeableConcept;
    measure: string;
    _measure?: Element;
    period: Period;
    reporter?: Reference<'Location' | 'Organization' | 'Practitioner' | 'PractitionerRole'>;
    status: 'complete' | 'pending' | 'error';
    _status?: Element;
    subject?: Reference<'Device' | 'Group' | 'Location' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    type: 'individual' | 'subject-list' | 'summary' | 'data-collection';
    _type?: Element;
}

