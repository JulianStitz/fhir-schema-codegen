# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import BackboneElement, CodeableConcept, Identifier, Ratio, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class MedicationIngredient(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    is_active: Optional[bool] = Field(None, alias="isActive", serialization_alias="isActive")
    item_codeable_concept: Optional[CodeableConcept] = Field(None, alias="itemCodeableConcept", serialization_alias="itemCodeableConcept")
    item_reference: Optional[Reference] = Field(None, alias="itemReference", serialization_alias="itemReference")
    strength: Optional[Ratio] = Field(None, alias="strength", serialization_alias="strength")

class MedicationBatch(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    expiration_date: Optional[str] = Field(None, alias="expirationDate", serialization_alias="expirationDate")
    lot_number: Optional[str] = Field(None, alias="lotNumber", serialization_alias="lotNumber")


class Medication(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True, extra="forbid")
    
    resource_type: str = Field(
        default='Medication',
        alias='resourceType',
        serialization_alias='resourceType',
        frozen=True,
        pattern='Medication'
    )
    
    amount: Optional[Ratio] = Field(None, alias="amount", serialization_alias="amount")
    batch: Optional[MedicationBatch] = Field(None, alias="batch", serialization_alias="batch")
    code: Optional[CodeableConcept] = Field(None, alias="code", serialization_alias="code")
    form: Optional[CodeableConcept] = Field(None, alias="form", serialization_alias="form")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    ingredient: Optional[L[MedicationIngredient]] = Field(None, alias="ingredient", serialization_alias="ingredient")
    manufacturer: Optional[Reference] = Field(None, alias="manufacturer", serialization_alias="manufacturer")
    status: Optional[Literal["active", "inactive", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")

