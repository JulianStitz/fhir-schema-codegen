# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import *
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import *
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class CareTeamParticipant(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    member: Optional[Reference] = Field(None, alias="member", serialization_alias="member")
    on_behalf_of: Optional[Reference] = Field(None, alias="onBehalfOf", serialization_alias="onBehalfOf")
    period: Optional[Period] = Field(None, alias="period", serialization_alias="period")
    role: Optional[L[CodeableConcept]] = Field(None, alias="role", serialization_alias="role")


class CareTeam(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    category: Optional[L[CodeableConcept]] = Field(None, alias="category", serialization_alias="category")
    encounter: Optional[Reference] = Field(None, alias="encounter", serialization_alias="encounter")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    managing_organization: Optional[L[Reference]] = Field(None, alias="managingOrganization", serialization_alias="managingOrganization")
    name: Optional[str] = Field(None, alias="name", serialization_alias="name")
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    participant: Optional[L[CareTeamParticipant]] = Field(None, alias="participant", serialization_alias="participant")
    period: Optional[Period] = Field(None, alias="period", serialization_alias="period")
    reason_code: Optional[L[CodeableConcept]] = Field(None, alias="reasonCode", serialization_alias="reasonCode")
    reason_reference: Optional[L[Reference]] = Field(None, alias="reasonReference", serialization_alias="reasonReference")
    status: Optional[Literal["proposed", "active", "suspended", "inactive", "entered-in-error"]] = Field(None, alias="status", serialization_alias="status")
    subject: Optional[Reference] = Field(None, alias="subject", serialization_alias="subject")
    telecom: Optional[L[ContactPoint]] = Field(None, alias="telecom", serialization_alias="telecom")

