# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import *
from typing import Optional, List as L, Literal

from .base import *
from .domain_resource import DomainResource


class SpecimenDefinitionTypeTestedContainerAdditive(BackboneElement):
    additive_codeable_concept: Optional[CodeableConcept] = None
    additive_reference: Optional[Reference] = None

class SpecimenDefinitionTypeTestedContainer(BackboneElement):
    additive: Optional[L[SpecimenDefinitionTypeTestedContainerAdditive]] = None
    cap: Optional[CodeableConcept] = None
    capacity: Optional[Quantity] = None
    description: Optional[str] = None
    material: Optional[CodeableConcept] = None
    minimum_volume_quantity: Optional[Quantity] = None
    minimum_volume_string: Optional[str] = None
    preparation: Optional[str] = None
    type: Optional[CodeableConcept] = None

class SpecimenDefinitionTypeTestedHandling(BackboneElement):
    instruction: Optional[str] = None
    max_duration: Optional[Duration] = None
    temperature_qualifier: Optional[CodeableConcept] = None
    temperature_range: Optional[Range] = None

class SpecimenDefinitionTypeTested(BackboneElement):
    container: Optional[SpecimenDefinitionTypeTestedContainer] = None
    handling: Optional[L[SpecimenDefinitionTypeTestedHandling]] = None
    is_derived: Optional[bool] = None
    preference: Optional[Literal["preferred", "alternate"]] = None
    rejection_criterion: Optional[L[CodeableConcept]] = None
    requirement: Optional[str] = None
    retention_time: Optional[Duration] = None
    type: Optional[CodeableConcept] = None


class SpecimenDefinition(DomainResource):
    collection: Optional[L[CodeableConcept]] = None
    identifier: Optional[Identifier] = None
    patient_preparation: Optional[L[CodeableConcept]] = None
    time_aspect: Optional[str] = None
    type_collected: Optional[CodeableConcept] = None
    type_tested: Optional[L[SpecimenDefinitionTypeTested]] = None

