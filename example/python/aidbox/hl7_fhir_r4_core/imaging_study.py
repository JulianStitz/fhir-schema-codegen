# WARNING: This file is autogenerated by FHIR Schema Codegen.
# https://github.com/fhir-schema/fhir-schema-codegen
# Any manual changes made to this file may be overwritten.

from __future__ import annotations
from pydantic import BaseModel, ConfigDict, Field, PositiveInt
from typing import Optional, List as L, Literal

from aidbox.hl7_fhir_r4_core.base import Annotation, BackboneElement, CodeableConcept, Coding, Identifier, Reference
from aidbox.hl7_fhir_r4_core.domain_resource import DomainResource


class ImagingStudySeriesInstance(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    number: Optional[int] = Field(None, alias="number", serialization_alias="number")
    sop_class: Optional[Coding] = Field(None, alias="sopClass", serialization_alias="sopClass")
    title: Optional[str] = Field(None, alias="title", serialization_alias="title")
    uid: Optional[str] = Field(None, alias="uid", serialization_alias="uid")

class ImagingStudySeriesPerformer(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    actor: Optional[Reference] = Field(None, alias="actor", serialization_alias="actor")
    function: Optional[CodeableConcept] = Field(None, alias="function", serialization_alias="function")

class ImagingStudySeries(BackboneElement):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    body_site: Optional[Coding] = Field(None, alias="bodySite", serialization_alias="bodySite")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    endpoint: Optional[L[Reference]] = Field(None, alias="endpoint", serialization_alias="endpoint")
    instance: Optional[L[ImagingStudySeriesInstance]] = Field(None, alias="instance", serialization_alias="instance")
    laterality: Optional[Coding] = Field(None, alias="laterality", serialization_alias="laterality")
    modality: Optional[Coding] = Field(None, alias="modality", serialization_alias="modality")
    number: Optional[int] = Field(None, alias="number", serialization_alias="number")
    number_of_instances: Optional[int] = Field(None, alias="numberOfInstances", serialization_alias="numberOfInstances")
    performer: Optional[L[ImagingStudySeriesPerformer]] = Field(None, alias="performer", serialization_alias="performer")
    specimen: Optional[L[Reference]] = Field(None, alias="specimen", serialization_alias="specimen")
    started: Optional[str] = Field(None, alias="started", serialization_alias="started")
    uid: Optional[str] = Field(None, alias="uid", serialization_alias="uid")


class ImagingStudy(DomainResource):
    model_config = ConfigDict(validate_by_name=True, serialize_by_alias=True)
    
    based_on: Optional[L[Reference]] = Field(None, alias="basedOn", serialization_alias="basedOn")
    description: Optional[str] = Field(None, alias="description", serialization_alias="description")
    encounter: Optional[Reference] = Field(None, alias="encounter", serialization_alias="encounter")
    endpoint: Optional[L[Reference]] = Field(None, alias="endpoint", serialization_alias="endpoint")
    identifier: Optional[L[Identifier]] = Field(None, alias="identifier", serialization_alias="identifier")
    interpreter: Optional[L[Reference]] = Field(None, alias="interpreter", serialization_alias="interpreter")
    location: Optional[Reference] = Field(None, alias="location", serialization_alias="location")
    modality: Optional[L[Coding]] = Field(None, alias="modality", serialization_alias="modality")
    note: Optional[L[Annotation]] = Field(None, alias="note", serialization_alias="note")
    number_of_instances: Optional[int] = Field(None, alias="numberOfInstances", serialization_alias="numberOfInstances")
    number_of_series: Optional[int] = Field(None, alias="numberOfSeries", serialization_alias="numberOfSeries")
    procedure_code: Optional[L[CodeableConcept]] = Field(None, alias="procedureCode", serialization_alias="procedureCode")
    procedure_reference: Optional[Reference] = Field(None, alias="procedureReference", serialization_alias="procedureReference")
    reason_code: Optional[L[CodeableConcept]] = Field(None, alias="reasonCode", serialization_alias="reasonCode")
    reason_reference: Optional[L[Reference]] = Field(None, alias="reasonReference", serialization_alias="reasonReference")
    referrer: Optional[Reference] = Field(None, alias="referrer", serialization_alias="referrer")
    series: Optional[L[ImagingStudySeries]] = Field(None, alias="series", serialization_alias="series")
    started: Optional[str] = Field(None, alias="started", serialization_alias="started")
    status: Optional[Literal["registered", "available", "cancelled", "entered-in-error", "unknown"]] = Field(None, alias="status", serialization_alias="status")
    subject: Optional[Reference] = Field(None, alias="subject", serialization_alias="subject")

